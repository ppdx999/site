"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[5528],{3692:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var a=s(7624),r=s(2172);const o={sidebar_position:3},l="Code Generation",i={id:"compiler/codegen",title:"Code Generation",description:"Example. 1 + 2 * 3",source:"@site/docs/compiler/codegen.md",sourceDirName:"compiler",slug:"/compiler/codegen",permalink:"/docs/compiler/codegen",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/compiler/codegen.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"worksSidebar",previous:{title:"Parser",permalink:"/docs/compiler/parser"}},t={},d=[{value:"Example. 1 + 2 * 3",id:"example-1--2--3",level:2},{value:"AST",id:"ast",level:3},{value:"X86 Assembly",id:"x86-assembly",level:3},{value:"Implementation sample",id:"implementation-sample",level:3}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",mermaid:"mermaid",pre:"pre",...(0,r.M)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"code-generation",children:"Code Generation"}),"\n",(0,a.jsx)(n.h2,{id:"example-1--2--3",children:"Example. 1 + 2 * 3"}),"\n",(0,a.jsx)(n.h3,{id:"ast",children:"AST"}),"\n",(0,a.jsx)(n.mermaid,{value:"graph TD\n    + --\x3e *\n    * --\x3e 1\n    * --\x3e 2\n    + --\x3e 3"}),"\n",(0,a.jsx)(n.h3,{id:"x86-assembly",children:"X86 Assembly"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-assembly",children:"push 1       ; stack: [1]\npush 2       ; stack: [1, 2]\n\npop rax      ; rax = 2, stack: [1]\npop rdi      ; rdi = 1, stack: []\nmul rax, rdi ; rax = 2 * 1 = 2\npush rax     ; stack: [2]\n\npush 3       ; stack: [2, 3]\n\npop rax      ; rax = 3, stack: [2]\npop rdi      ; rdi = 2, stack: []\nadd rax, rdi ; rax = 3 + 2 = 5\npush rax     ; stack: [5]\n"})}),"\n",(0,a.jsx)(n.h3,{id:"implementation-sample",children:"Implementation sample"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",metastring:'title="codegen.ts"',children:"function codegen(node: Node): string {\n    if (node.type === 'number') {\n        console.log(`push ${node.value}`)\n        return;\n    }\n\n    codegen(node.left)\n    codegen(node.right)\n\n    console.log(`pop rax`)\n    console.log(`pop rdi`)\n\n    switch (node.type) {\n        case 'add':\n            console.log('add rax, rdi')\n            break;\n        case 'sub':\n            console.log('sub rax, rdi')\n            break;\n        case 'mul':\n            console.log('mul rax, rdi')\n            break;\n        case 'div':\n            console.log('cmp rax, rdi');\n            console.log('sete al');\n            console.log('movzb rax, al');\n            break;\n        default:\n            throw new Error('unexpected node type')\n            break;\n    }\n\n    console.log('push rax')\n}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,r.M)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}}}]);