"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[9446],{3004:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>d,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var t=n(7624),r=n(2172);const o={sidebar_position:0},s="Overview",a={id:"compiler/overview",title:"Overview",description:"Compiler process is divided into 3 steps: Tokenization, Parsing, and Code Generation.",source:"@site/docs/compiler/overview.md",sourceDirName:"compiler",slug:"/compiler/overview",permalink:"/ja/docs/compiler/overview",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/compiler/overview.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0},sidebar:"worksSidebar",previous:{title:"About",permalink:"/ja/docs/intro"},next:{title:"Tokenizer",permalink:"/ja/docs/compiler/tokenizer"}},d={},c=[{value:"Tokenization",id:"tokenization",level:2},{value:"Parsing",id:"parsing",level:2},{value:"Code Generation",id:"code-generation",level:2}];function l(e){const i={h1:"h1",h2:"h2",mermaid:"mermaid",p:"p",...(0,r.M)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.h1,{id:"overview",children:"Overview"}),"\n",(0,t.jsx)(i.p,{children:"Compiler process is divided into 3 steps: Tokenization, Parsing, and Code Generation."}),"\n",(0,t.jsx)(i.h2,{id:"tokenization",children:"Tokenization"}),"\n",(0,t.jsx)(i.p,{children:'Tokenization is the process of dividing a string into tokens. For example, the string "1 + 2 * 3" would be tokenized into the following tokens: "1", "+", "2", "*", and "3".'}),"\n",(0,t.jsx)(i.h2,{id:"parsing",children:"Parsing"}),"\n",(0,t.jsx)(i.p,{children:'Parsing is the process of taking the tokens and turning them into a tree structure. For example, the tokens "1", "+", "2", "*", and "3" would be turned into the following tree structure:'}),"\n",(0,t.jsx)(i.mermaid,{value:"graph TD\n    + --\x3e 1\n    + --\x3e *\n    * --\x3e 2\n    * --\x3e 3"}),"\n",(0,t.jsx)(i.h2,{id:"code-generation",children:"Code Generation"}),"\n",(0,t.jsx)(i.p,{children:"Code Generation is the process of taking the tree structure and turning it into a string. For example, the tree structure:"})]})}function p(e={}){const{wrapper:i}={...(0,r.M)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}}}]);